# ---------------------------------------------------------------------------------------------------------------------
# Heartbeat record, to verify that the IOC is running
# ---------------------------------------------------------------------------------------------------------------------

record (event, "$(P):HEARTBEAT") {
    field (DESC, "IOC heartbeat")
    field (SCAN, "$(S)")
    field (VAL, "HEARTBEAT")
}

# ---------------------------------------------------------------------------------------------------------------------
# Analog channels
# ---------------------------------------------------------------------------------------------------------------------

record (ai, "$(P):PORT_01") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_01")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_02") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_02")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_03") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_03")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_04") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_04")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_05") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_05")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_06") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_06")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_07") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_07")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_08") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_08")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_09") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_09")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_10") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_10")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_11") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_11")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_12") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_12")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_13") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_13")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_14") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_14")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_15") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_15")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_16") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_16")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_17") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_17")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_18") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_18")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_19") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_19")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

record (ai, "$(P):PORT_20") {
    field (DTYP, "asynFloat64")
    field (INP,  "@asyn($(PORT),$(ADDR),$(TMO))GET_DATA_20")
    field (PREC, "3")
    # Archive every scan period, even if there are no changes, to avoid gaps in the data sequence
    field (ADEL, "-1")
    field (MDEL, "-1")
    # Synchronize all timestamps
    field (SCAN, "Event")
    field (EVNT, "HEARTBEAT")
    field (TSEL, "$(P):HEARTBEAT.TIME")
}

# ---------------------------------------------------------------------------------------------------------------------
# Control commands
# ---------------------------------------------------------------------------------------------------------------------

record(bo, "$(P):START") {
    field (DTYP, "asynInt32")
    field (OUT,  "@asyn($(PORT),$(ADDR),$(TMO))SET_START")
}

record(bo, "$(P):STOP") {
    field (DTYP, "asynInt32")
    field (OUT,  "@asyn($(PORT),$(ADDR),$(TMO))SET_STOP")
}
